[{"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\index.js":"1","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\App.js":"2","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\reportWebVitals.js":"3","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AllStudents.jsx":"4","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentTable.jsx":"5","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentDetails.jsx":"6","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Modal.jsx":"7","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoDetails.jsx":"8","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\StudentContactInfoAddAndShow.jsx":"9","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetails.jsx":"10","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoForm.jsx":"11","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\SelectDormForm.jsx":"12","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseDetails.jsx":"13","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\RemoveCourseStudent.jsx":"14","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AvailableCourses.jsx":"15","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\CheckBox.jsx":"16","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\NavBar.jsx":"17","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\CreateOrEditStudent.jsx":"18","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentForm.jsx":"19","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\AllDorms.jsx":"20","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormTable.jsx":"21","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetailsShow.jsx":"22","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\CreateOrEditDorm.jsx":"23","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormForm.jsx":"24","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CreateOrEditCourse.jsx":"25","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseForm.jsx":"26","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AllCourses.jsx":"27","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseTable.jsx":"28","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Delete.jsx":"29","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\RemoveStudentFromDorm.jsx":"30","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AvailableStudents.jsx":"31"},{"size":560,"mtime":1611622961313,"results":"32","hashOfConfig":"33"},{"size":1277,"mtime":1611622945502,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":767,"mtime":1610829170689,"results":"36","hashOfConfig":"33"},{"size":4074,"mtime":1611719287693,"results":"37","hashOfConfig":"33"},{"size":7918,"mtime":1611715886470,"results":"38","hashOfConfig":"33"},{"size":2853,"mtime":1611712330694,"results":"39","hashOfConfig":"33"},{"size":477,"mtime":1611716722113,"results":"40","hashOfConfig":"33"},{"size":938,"mtime":1610816369316,"results":"41","hashOfConfig":"33"},{"size":3742,"mtime":1611009448648,"results":"42","hashOfConfig":"33"},{"size":1724,"mtime":1610835157558,"results":"43","hashOfConfig":"33"},{"size":1980,"mtime":1611714119963,"results":"44","hashOfConfig":"33"},{"size":3946,"mtime":1611011593439,"results":"45","hashOfConfig":"33"},{"size":839,"mtime":1611009881216,"results":"46","hashOfConfig":"33"},{"size":3029,"mtime":1611716584112,"results":"47","hashOfConfig":"33"},{"size":971,"mtime":1611006994385,"results":"48","hashOfConfig":"33"},{"size":2528,"mtime":1611707340762,"results":"49","hashOfConfig":"33"},{"size":1941,"mtime":1611710872396,"results":"50","hashOfConfig":"33"},{"size":1672,"mtime":1610835350016,"results":"51","hashOfConfig":"33"},{"size":961,"mtime":1610993407036,"results":"52","hashOfConfig":"33"},{"size":3739,"mtime":1611705922983,"results":"53","hashOfConfig":"33"},{"size":322,"mtime":1611716929698,"results":"54","hashOfConfig":"33"},{"size":1830,"mtime":1610935209201,"results":"55","hashOfConfig":"33"},{"size":1326,"mtime":1610934169356,"results":"56","hashOfConfig":"33"},{"size":1888,"mtime":1610947893263,"results":"57","hashOfConfig":"33"},{"size":1356,"mtime":1610946450407,"results":"58","hashOfConfig":"33"},{"size":988,"mtime":1610993906451,"results":"59","hashOfConfig":"33"},{"size":3763,"mtime":1611717850586,"results":"60","hashOfConfig":"33"},{"size":615,"mtime":1611706106715,"results":"61","hashOfConfig":"33"},{"size":625,"mtime":1611008993734,"results":"62","hashOfConfig":"33"},{"size":3032,"mtime":1611012059343,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1myypxa",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\index.js",[],["132","133"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\App.js",["134","135"],"import './App.css';\nimport {Router, Redirect, Link} from \"@reach/router\";\nimport AllStudents from \"./component/student/AllStudents.jsx\";\nimport AllDorms from \"./component/dorm/AllDorms.jsx\";\nimport StudentDetails from \"./component/student/StudentDetails.jsx\";\nimport DormDetails from \"./component/dorm/DormDetails.jsx\";\nimport CourseDetails from \"./component/course/CourseDetails.jsx\";\nimport NavBar from \"./component/module/NavBar\";\nimport CreateOrEditStudent from \"./component/student/CreateOrEditStudent.jsx\";\nimport CreateOrEditDorm from \"./component/dorm/CreateOrEditDorm.jsx\";\nimport CreateOrEditCourse from \"./component/course/CreateOrEditCourse.jsx\";\nimport AllCourses from \"./component/course/AllCourses.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <NavBar>\n          <CreateOrEditStudent />\n          <CreateOrEditDorm />  \n          <CreateOrEditCourse />  \n      </NavBar>\n      <Router className=\"main-container\">\n          <AllStudents path = \"/\" />\n          <StudentDetails path = \"/students/:id\" />\n          <AllDorms path = \"/dorms\" />\n          <DormDetails path = \"/dorms/:id\" />\n          <AllCourses path = \"/courses\" />\n          <CourseDetails path =\"/courses/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\reportWebVitals.js",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AllStudents.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentTable.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentDetails.jsx",["136"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Modal.jsx",["137"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoDetails.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\StudentContactInfoAddAndShow.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetails.jsx",["138"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport DormDetailsShow from \"./DormDetailsShow\";\r\nimport CreateOrEditDorm from \"./CreateOrEditDorm.jsx\";\r\nimport {Link} from \"@reach/router\";\r\nimport RemoveStudentFromDorm from \"./RemoveStudentFromDorm.jsx\";\r\nimport AvailableStudents from \"../student/AvailableStudents.jsx\";\r\n\r\nconst DormDetails = props => {\r\n\r\n    const [curDorm, setCurDorm] = useState({});\r\n    const [studentsInDorm, setStudentsInDorm] = useState([]);\r\n    const [studentsHaveNoDorm, setStudentHaveNoDorm] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8080/api/dorms/\" + props.id)\r\n        .then(res=>{\r\n            setCurDorm(res.data);\r\n            setStudentsInDorm(res.data.students);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on geting dorm information. Details: \" + err);\r\n        });\r\n        \r\n        axios.get(\"http://localhost:8080/api/students/nodorm\")\r\n        .then(res=>{\r\n            setStudentHaveNoDorm(res.data);\r\n            setIsLoaded(true);\r\n        })\r\n        .catch(err=>{\r\n            console.log(`Error on getting students have no dorm. Detail : ${err}`);\r\n        });\r\n\r\n        return( ()=> { setCurDorm({}); setStudentHaveNoDorm([]); } );\r\n    }, [isLoaded]);\r\n\r\n    const updateDom = removedStudent => {\r\n        \r\n        setStudentsInDorm(studentsInDorm.filter(student=>\r\n            student.id !== removedStudent.id\r\n        ));\r\n\r\n        setStudentHaveNoDorm([\r\n            ...studentsHaveNoDorm,\r\n            removedStudent\r\n        ]);\r\n\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            isLoaded && \r\n                <>\r\n                <DormDetailsShow dorm = {curDorm} />\r\n                \r\n                <CreateOrEditDorm  \r\n                curDorm = {curDorm} \r\n                setCurDorm = {setCurDorm}\r\n                />\r\n                <hr/>\r\n\r\n                <h3>Students in Dorm</h3>\r\n                {\r\n                    studentsInDorm.length === 0?\r\n                        <p>This Dormity is Empty</p>\r\n                        :\r\n                        <table style={{margin: \"auto\"}}>\r\n                            <tbody>\r\n                            {\r\n                                studentsInDorm.map((student, i) => {\r\n                                    return(\r\n                                        <tr>\r\n                                            <td><Link to={`/students/${student.id}`}>{student.firstName} {student.lastName}</Link></td>\r\n                                            \r\n                                            <td>\r\n                                                <RemoveStudentFromDorm\r\n                                                studentId = {student.id}\r\n                                                updateDom = {updateDom}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                }\r\n                <hr/>\r\n\r\n                <h3>Add Students to Dorm: </h3>\r\n                <AvailableStudents\r\n                items = \"dorms\"\r\n                itemId = {props.id}\r\n                setNotAvailableStudents = {setStudentsInDorm}\r\n                setAvailableStudents = {setStudentHaveNoDorm}\r\n                availableStudents = {studentsHaveNoDorm}\r\n                />\r\n                </>\r\n        }\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default DormDetails;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\SelectDormForm.jsx",["139","140"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseDetails.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\RemoveCourseStudent.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AvailableCourses.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\CheckBox.jsx",["141"],"import React, {useEffect, useState} from \"react\";\r\n\r\nconst CheckBox = props => {\r\n    \r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setIsChecked(props.checkedAll);\r\n        props.setIsLoaded(true);\r\n    }, [props.checkedAll, props.isLoaded]);\r\n\r\n    const onChangeHandler = (e) =>{\r\n        setIsChecked(!isChecked);\r\n        props.callBack(e.target.checked, e.target.value)\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            props.isLoaded &&\r\n            <>\r\n            <input \r\n            type=\"checkbox\"\r\n            value={props.item.id}\r\n            checked={isChecked}\r\n            onChange={onChangeHandler}\r\n            />\r\n            {\r\n                props.student?\r\n                <span> {props.item.firstName} {props.item.lastName}</span>\r\n                :\r\n                <span> {props.item.name}</span>\r\n            }\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckBox;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\NavBar.jsx",["142"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\CreateOrEditStudent.jsx",["143"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\AllDorms.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormTable.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetailsShow.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\CreateOrEditDorm.jsx",["144"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../module/Modal.jsx\";\r\nimport DormForm from \"../dorm/DormForm.jsx\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\nconst CreateOrEditDorm = props => {\r\n\r\n    const [newDorm, setNewDorm] = useState({\r\n        name: \"\",\r\n        address: \"\"\r\n    });\r\n\r\n    const addNewDorm = (dorm) =>{\r\n        axios.post(\"http://localhost:8080/api/dorms/new\", dorm)\r\n        .then(res=>{\r\n            navigate(\"/dorms/\" + res.data.id);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on creating new dorm . Details: \" + err);\r\n        })\r\n\r\n    };\r\n\r\n    const editDorm = (dorm) =>{\r\n        axios.patch(\"http://localhost:8080/api/dorms/\" + props.curDorm.id, dorm)\r\n        .then(res=>{\r\n            props.setCurDorm(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on editing dorm . Details: \" + err);\r\n        })\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            props.curDorm?\r\n            <>\r\n                <Modal\r\n                action = \"Edit Dorm\"\r\n                modalTitle = \"Eidt Dorm\" \r\n                >\r\n                    <DormForm\r\n                    initialState = {props.curDorm}\r\n                    callBack = {editDorm}\r\n                    btn = \"Edit\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n                :\r\n            <>\r\n                <Modal\r\n                action = \"Add New Dorm\"\r\n                modalTitle = \"Add New Dorm\" \r\n                >\r\n                    <DormForm\r\n                    initialState = {newDorm}\r\n                    callBack = {addNewDorm}\r\n                    btn = \"Add\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateOrEditDorm;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CreateOrEditCourse.jsx",["145"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../module/Modal.jsx\";\r\nimport CourseForm from \"../course/CourseForm.jsx\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\n\r\nconst CreateOrEditCourse = props => {\r\n\r\n    const [newCourse, setNewCourse] = useState({\r\n        name: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const addNewCourse = (course) => {\r\n        axios.post(\"http://localhost:8080/api/courses/new\", course)\r\n        .then(res=>{\r\n            navigate(\"/courses/\" + res.data.id);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on adding new course. Details: \" + err);\r\n        });\r\n    };\r\n\r\n    const editCourse =(course) => {\r\n        axios.patch(\"http://localhost:8080/api/courses/\" + props.curCourse.id, course)\r\n        .then(res=>{\r\n            props.setCurCourse(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on editing course. Details: \" + err);\r\n        });\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            props.curCourse?\r\n            <>\r\n                <Modal\r\n                action = \"Edit Course\"\r\n                modalTitle = \"Edit Course\"\r\n                >\r\n                    <CourseForm\r\n                    initialState = {props.curCourse}\r\n                    callBack = {editCourse}\r\n                    btn = \"Edit\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n            :\r\n            <>\r\n                <Modal\r\n                action = \"Add New Course\"\r\n                modalTitle = \"Add New Course\"\r\n                >\r\n                    <CourseForm\r\n                    initialState = {newCourse}\r\n                    callBack = {addNewCourse}\r\n                    btn = \"Add\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateOrEditCourse;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AllCourses.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseTable.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Delete.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\RemoveStudentFromDorm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AvailableStudents.jsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":17,"nodeType":"152","messageId":"153","endLine":2,"endColumn":25},{"ruleId":"150","severity":1,"message":"154","line":2,"column":27,"nodeType":"152","messageId":"153","endLine":2,"endColumn":31},{"ruleId":"150","severity":1,"message":"155","line":22,"column":28,"nodeType":"152","messageId":"153","endLine":22,"endColumn":45},{"ruleId":"156","severity":1,"message":"157","line":30,"column":9,"nodeType":"158","messageId":"159","endLine":49,"endColumn":10},{"ruleId":"160","severity":1,"message":"161","line":36,"column":8,"nodeType":"162","endLine":36,"endColumn":18,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"164","line":12,"column":12,"nodeType":"152","messageId":"153","endLine":12,"endColumn":24},{"ruleId":"150","severity":1,"message":"165","line":12,"column":26,"nodeType":"152","messageId":"153","endLine":12,"endColumn":41},{"ruleId":"160","severity":1,"message":"166","line":10,"column":8,"nodeType":"162","endLine":10,"endColumn":42,"suggestions":"167"},{"ruleId":"156","severity":1,"message":"157","line":23,"column":9,"nodeType":"158","messageId":"159","endLine":52,"endColumn":10},{"ruleId":"150","severity":1,"message":"168","line":10,"column":24,"nodeType":"152","messageId":"153","endLine":10,"endColumn":37},{"ruleId":"150","severity":1,"message":"169","line":9,"column":21,"nodeType":"152","messageId":"153","endLine":9,"endColumn":31},{"ruleId":"150","severity":1,"message":"170","line":10,"column":23,"nodeType":"152","messageId":"153","endLine":10,"endColumn":35},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setNewContactInfo' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'selectedDorm' is assigned a value but never used.","'setSelectedDorm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["174"],"'setNewStudent' is assigned a value but never used.","'setNewDorm' is assigned a value but never used.","'setNewCourse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [isLoaded, props.id]",{"range":"179","text":"180"},"Update the dependencies array to be: [props, props.checkedAll, props.isLoaded]",{"range":"181","text":"182"},[1337,1347],"[isLoaded, props.id]",[249,283],"[props, props.checkedAll, props.isLoaded]"]