[{"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\index.js":"1","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\App.js":"2","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\reportWebVitals.js":"3","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AllStudents.jsx":"4","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentTable.jsx":"5","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentDetails.jsx":"6","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Modal.jsx":"7","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoDetails.jsx":"8","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\StudentContactInfoAddAndShow.jsx":"9","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetails.jsx":"10","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoForm.jsx":"11","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\SelectDormForm.jsx":"12","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseDetails.jsx":"13","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\RemoveCourseStudent.jsx":"14","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AvailableCourses.jsx":"15","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\CheckBox.jsx":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":524,"mtime":1610645255953,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":843,"mtime":1610390354321,"results":"21","hashOfConfig":"18"},{"size":3117,"mtime":1610390289443,"results":"22","hashOfConfig":"18"},{"size":5930,"mtime":1610773411518,"results":"23","hashOfConfig":"18"},{"size":1655,"mtime":1610567687849,"results":"24","hashOfConfig":"18"},{"size":351,"mtime":1610501916440,"results":"25","hashOfConfig":"18"},{"size":718,"mtime":1610582842705,"results":"26","hashOfConfig":"18"},{"size":259,"mtime":1610564353164,"results":"27","hashOfConfig":"18"},{"size":1934,"mtime":1610567682877,"results":"28","hashOfConfig":"18"},{"size":1989,"mtime":1610676864559,"results":"29","hashOfConfig":"18"},{"size":1923,"mtime":1610659415531,"results":"30","hashOfConfig":"18"},{"size":855,"mtime":1610768659835,"results":"31","hashOfConfig":"18"},{"size":3180,"mtime":1610773484612,"results":"32","hashOfConfig":"18"},{"size":674,"mtime":1610773620119,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1myypxa",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\index.js",[],["70","71"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\App.js",["72","73"],"import './App.css';\nimport {Router, Redirect, Link} from \"@reach/router\";\nimport AllStudents from \"./component/student/AllStudents.jsx\";\nimport StudentDetails from\"./component/student/StudentDetails.jsx\";\nimport CourseDetails from \"./component/course/CourseDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AllStudents path = \"/\" />\n        <StudentDetails path = \"/students/:id\" />\n        <CourseDetails path =\"/courses/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\reportWebVitals.js",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AllStudents.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentTable.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentDetails.jsx",["74"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Modal.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoDetails.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\StudentContactInfoAddAndShow.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetails.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\SelectDormForm.jsx",["75","76"],"import React, { useEffect, useState } from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from \"axios\";\r\n\r\nconst SelectDormForm = props =>{\r\n\r\n    const [allDorms, setAllDorms] = useState([]);\r\n    const [selectedDorm, setSelectedDorm] = useState({});\r\n    const [curStudent, setCurStudent] = useState(props.curStudent);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8080/api/dorms\")\r\n        .then(res=>{\r\n            if(props.dorm){\r\n                res.data = res.data.filter(dorm => dorm.id !== props.dorm.id);\r\n            }\r\n            setAllDorms(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on getting all dorms. Details: \" + err);\r\n        });\r\n        return(()=> {setAllDorms([])})\r\n    },[props.dorm])\r\n\r\n    const onChangeHandler = e =>{\r\n        setCurStudent({\r\n            ...curStudent,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const onSubmitHandler = e =>{\r\n        e.preventDefault();\r\n        props.callBack(curStudent)\r\n    };\r\n\r\n    return(\r\n\r\n        <form onSubmit = {onSubmitHandler}>\r\n\r\n            <FormControl style={{minWidth: 200, marginBottom: \"20px\"}}>\r\n                <InputLabel>Assign a Dormity</InputLabel>\r\n                <Select\r\n                name=\"dorm\"\r\n                displayEmpty\r\n                onChange={onChangeHandler}\r\n                >\r\n                    {allDorms.map((dorm, i)=>{\r\n                        return(\r\n                            <MenuItem  value={dorm}  key={i}>{dorm.name}</MenuItem >\r\n                        );\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <br/>\r\n            <small><input type=\"submit\" value=\"ASSIGN\"/></small>\r\n        </form>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default SelectDormForm;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseDetails.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\RemoveCourseStudent.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AvailableCourses.jsx",["77"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport CheckBox from \"../module/CheckBox.jsx\";\r\n\r\nconst AvailableCourses = props =>{\r\n\r\n    // const [availableCourses, setAvailableCourses] = useState(props.avaialbleCourses);\r\n    // const [isLoaded, setIsLoaded] = useState(false);\r\n    const [checkedAll, setCheckedAll] = useState(false);\r\n    const [selectedCourses, setSelectedCourses] = useState([]);\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     axios.get(\"http://localhost:8080/api/courses/students/\" + props.studentId)\r\n    //     .then(res=>{\r\n    //         setAvailableCourses(res.data);\r\n    //         setIsLoaded(true);\r\n    //     })\r\n    //     .catch(err=>{\r\n    //         console.log(\"Error on getting available courses. Details: \" + err);\r\n    //     })\r\n\r\n    //     return( () => setAvailableCourses([]) );\r\n\r\n    // }, [props.studentId, isLoaded])\r\n\r\n    const onChangeHandler = (e) => {\r\n        \r\n        setCheckedAll(!checkedAll);\r\n        if(e.target.checked){\r\n            for(let course of props.availableCourses){\r\n                if(!selectedCourses.includes(course.id)){\r\n                    selectedCourses.push(course.id)\r\n                }\r\n            }\r\n        }else{\r\n            setSelectedCourses([]);\r\n        }\r\n    };\r\n    \r\n    const addToSelectedCourses = (isChecked, checkedCourseId) => {\r\n        checkedCourseId = Number(checkedCourseId); \r\n        if(isChecked){\r\n            setSelectedCourses([\r\n                ...selectedCourses,\r\n                checkedCourseId\r\n            ])\r\n        }else{\r\n            setSelectedCourses(selectedCourses.filter(courseId => courseId!== checkedCourseId));\r\n        }\r\n    };\r\n    console.log(selectedCourses)\r\n    const onSubmitHandler = (e) =>{\r\n        e.preventDefault();\r\n        axios.patch(\"http://localhost:8080/api/courses/addstudent/\" + props.studentId, selectedCourses)\r\n        .then(res=>{\r\n            props.setEnrolledCourses(res.data[0]);\r\n            props.setAvailableCourses(res.data[1]);\r\n            setSelectedCourses([]);\r\n            setCheckedAll(false);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on add courses. Details: \" + err);\r\n        });\r\n    };\r\n    \r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmitHandler}>\r\n                <input type=\"checkbox\" checked={checkedAll} onChange={onChangeHandler} />\r\n                <span> Check All</span>\r\n                <br/>\r\n                {\r\n                    props.availableCourses.map((course, i) => {\r\n                        return(\r\n                            <>\r\n                                <CheckBox \r\n                                key={i} \r\n                                item={course} \r\n                                checkedAll={checkedAll}\r\n                                callBack={addToSelectedCourses}\r\n                                />\r\n                                <br/>\r\n                            </>\r\n                        );\r\n                    })\r\n                }\r\n                <input type=\"submit\" value=\"Enroll Classes\" />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AvailableCourses;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\CheckBox.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":17,"nodeType":"84","messageId":"85","endLine":2,"endColumn":25},{"ruleId":"82","severity":1,"message":"86","line":2,"column":27,"nodeType":"84","messageId":"85","endLine":2,"endColumn":31},{"ruleId":"82","severity":1,"message":"87","line":18,"column":28,"nodeType":"84","messageId":"85","endLine":18,"endColumn":45},{"ruleId":"82","severity":1,"message":"88","line":11,"column":12,"nodeType":"84","messageId":"85","endLine":11,"endColumn":24},{"ruleId":"82","severity":1,"message":"89","line":11,"column":26,"nodeType":"84","messageId":"85","endLine":11,"endColumn":41},{"ruleId":"82","severity":1,"message":"90","line":1,"column":16,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setNewContactInfo' is assigned a value but never used.","'selectedDorm' is assigned a value but never used.","'setSelectedDorm' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]