[{"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\index.js":"1","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\App.js":"2","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\reportWebVitals.js":"3","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AllStudents.jsx":"4","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentTable.jsx":"5","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentDetails.jsx":"6","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Modal.jsx":"7","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoDetails.jsx":"8","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\StudentContactInfoAddAndShow.jsx":"9","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetails.jsx":"10","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoForm.jsx":"11","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\SelectDormForm.jsx":"12","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseDetails.jsx":"13","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\RemoveCourseStudent.jsx":"14","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AvailableCourses.jsx":"15","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\CheckBox.jsx":"16","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\NavBar.jsx":"17","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\CreateOrEditStudent.jsx":"18","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentForm.jsx":"19","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\AllDorms.jsx":"20","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormTable.jsx":"21","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetailsShow.jsx":"22","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\CreateOrEditDorm.jsx":"23","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormForm.jsx":"24","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CreateOrEditCourse.jsx":"25","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseForm.jsx":"26","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AllCourses.jsx":"27","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseTable.jsx":"28","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Delete.jsx":"29","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\RemoveStudentFromDorm.jsx":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":1307,"mtime":1610991271029,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":767,"mtime":1610829170689,"results":"35","hashOfConfig":"32"},{"size":3117,"mtime":1610390289443,"results":"36","hashOfConfig":"32"},{"size":7445,"mtime":1610997100549,"results":"37","hashOfConfig":"32"},{"size":1585,"mtime":1610835202565,"results":"38","hashOfConfig":"32"},{"size":351,"mtime":1610501916440,"results":"39","hashOfConfig":"32"},{"size":938,"mtime":1610816369316,"results":"40","hashOfConfig":"32"},{"size":2514,"mtime":1611002647640,"results":"41","hashOfConfig":"32"},{"size":1724,"mtime":1610835157558,"results":"42","hashOfConfig":"32"},{"size":1989,"mtime":1610676864559,"results":"43","hashOfConfig":"32"},{"size":2833,"mtime":1610997448991,"results":"44","hashOfConfig":"32"},{"size":855,"mtime":1610768659835,"results":"45","hashOfConfig":"32"},{"size":2804,"mtime":1610995234947,"results":"46","hashOfConfig":"32"},{"size":810,"mtime":1610778428670,"results":"47","hashOfConfig":"32"},{"size":333,"mtime":1610991392230,"results":"48","hashOfConfig":"32"},{"size":1941,"mtime":1610933070161,"results":"49","hashOfConfig":"32"},{"size":1672,"mtime":1610835350016,"results":"50","hashOfConfig":"32"},{"size":961,"mtime":1610993407036,"results":"51","hashOfConfig":"32"},{"size":3211,"mtime":1610993556642,"results":"52","hashOfConfig":"32"},{"size":267,"mtime":1610856111903,"results":"53","hashOfConfig":"32"},{"size":1830,"mtime":1610935209201,"results":"54","hashOfConfig":"32"},{"size":1326,"mtime":1610934169356,"results":"55","hashOfConfig":"32"},{"size":1888,"mtime":1610947893263,"results":"56","hashOfConfig":"32"},{"size":1356,"mtime":1610946450407,"results":"57","hashOfConfig":"32"},{"size":988,"mtime":1610993906451,"results":"58","hashOfConfig":"32"},{"size":3236,"mtime":1610993818511,"results":"59","hashOfConfig":"32"},{"size":555,"mtime":1610993565812,"results":"60","hashOfConfig":"32"},{"size":632,"mtime":1611003084846,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1myypxa",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\index.js",[],["129","130"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\App.js",["131","132"],"import './App.css';\nimport {Router, Redirect, Link} from \"@reach/router\";\nimport AllStudents from \"./component/student/AllStudents.jsx\";\nimport AllDorms from \"./component/dorm/AllDorms.jsx\";\nimport StudentDetails from \"./component/student/StudentDetails.jsx\";\nimport DormDetails from \"./component/dorm/DormDetails.jsx\";\nimport CourseDetails from \"./component/course/CourseDetails.jsx\";\nimport NavBar from \"./component/module/NavBar\";\nimport CreateOrEditStudent from \"./component/student/CreateOrEditStudent.jsx\";\nimport CreateOrEditDorm from \"./component/dorm/CreateOrEditDorm.jsx\";\nimport CreateOrEditCourse from \"./component/course/CreateOrEditCourse.jsx\";\nimport AllCourses from \"./component/course/AllCourses.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar>\n      <div style={{display: \"flex\", justifyContent:\"space-evenly\"}}>\n        <CreateOrEditStudent />\n        <CreateOrEditDorm />  \n        <CreateOrEditCourse />  \n      </div>\n      <Router>\n        <AllStudents path = \"/\" />\n        <StudentDetails path = \"/students/:id\" />\n        <AllDorms path = \"/dorms\" />\n        <DormDetails path = \"/dorms/:id\" />\n        <AllCourses path = \"/courses\" />\n        <CourseDetails path =\"/courses/:id\" />\n      </Router>\n      </NavBar>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\reportWebVitals.js",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\AllStudents.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentTable.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentDetails.jsx",["133"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Modal.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoDetails.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\StudentContactInfoAddAndShow.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetails.jsx",["134"],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\contactInfo\\ContactInfoForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\SelectDormForm.jsx",["135","136"],"import React, { useEffect, useState } from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from \"axios\";\r\n\r\nconst SelectDormForm = props =>{\r\n\r\n    const [allDorms, setAllDorms] = useState([]);\r\n    const [selectedDorm, setSelectedDorm] = useState({});\r\n    const [curStudent, setCurStudent] = useState(props.curStudent);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8080/api/dorms\")\r\n        .then(res=>{\r\n            if(props.dorm){\r\n                res.data = res.data.filter(dorm => dorm.id !== props.dorm.id);\r\n            }\r\n            setAllDorms(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on getting all dorms. Details: \" + err);\r\n        });\r\n        return(()=> {setAllDorms([])})\r\n    },[props.dorm])\r\n\r\n    const onChangeHandler = e =>{\r\n        setCurStudent({\r\n            ...curStudent,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const onSubmitHandler = e =>{\r\n        e.preventDefault();\r\n        props.callBack(curStudent)\r\n    };\r\n\r\n    return(\r\n\r\n        <form onSubmit = {onSubmitHandler}>\r\n\r\n            <FormControl style={{minWidth: 200, marginBottom: \"20px\"}}>\r\n                <InputLabel>Assign a Dormity</InputLabel>\r\n                <Select\r\n                name=\"dorm\"\r\n                displayEmpty\r\n                onChange={onChangeHandler}\r\n                >\r\n                    {allDorms.map((dorm, i)=>{\r\n                        return(\r\n                            <MenuItem  value={dorm}  key={i}>{dorm.name}</MenuItem >\r\n                        );\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <br/>\r\n            <small><input type=\"submit\" value=\"ASSIGN\"/></small>\r\n        </form>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default SelectDormForm;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseDetails.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\RemoveCourseStudent.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AvailableCourses.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\CheckBox.jsx",["137"],"import React, {useEffect, useState} from \"react\";\r\n\r\nconst CheckBox = props => {\r\n    \r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setIsChecked(props.checkedAll);\r\n        props.setIsLoaded(true);\r\n    }, [props.checkedAll, props.isLoaded]);\r\n\r\n    const onChangeHandler = (e) =>{\r\n        setIsChecked(!isChecked);\r\n        props.callBack(e.target.checked, e.target.value)\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            props.isLoaded &&\r\n            <>\r\n            <input \r\n            type=\"checkbox\"\r\n            value={props.item.id}\r\n            checked={isChecked}\r\n            onChange={onChangeHandler}\r\n            />\r\n            <span> {props.item.name}</span>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckBox;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\NavBar.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\CreateOrEditStudent.jsx",["138"],"import Modal  from \"../module/Modal\";\r\nimport React, {useState} from \"react\";\r\nimport StudentForm from \"./StudentForm\";\r\nimport axios from \"axios\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\n\r\nconst CreateOrEditStudent = props =>{\r\n\r\n    const [newStudent, setNewStudent] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        age: 0\r\n    });\r\n\r\n\r\n    const addNewStudent = (student) => {\r\n        axios.post(\"http://localhost:8080/api/students/new\", student)\r\n        .then(res=>{\r\n            navigate(`/students/${res.data.id}`);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on adding student. Details: \" + err);\r\n        });\r\n    };\r\n\r\n    const editStudent = (student) => {\r\n        \r\n        axios.patch(\"http://localhost:8080/api/students/edit/\" + props.curStudent.id, student)\r\n        .then(res=>{\r\n            props.setCurStudent(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on editing student. Details: \" + err);\r\n        });\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            props.curStudent?\r\n            <>\r\n                <Modal\r\n                action = \"Edit Student\"\r\n                modalTitle = \"Edit Student\"\r\n                >\r\n                    <StudentForm \r\n                    initialState = {props.curStudent}\r\n                    callBack = {editStudent}\r\n                    btn = \"Edit\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n                :\r\n            <>\r\n                <Modal\r\n                action = \"Add New Student\"\r\n                modalTitle = \"Add New Student\"\r\n                >\r\n                    <StudentForm \r\n                    initialState = {newStudent}\r\n                    callBack = {addNewStudent}\r\n                    btn = \"Add\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateOrEditStudent;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\student\\StudentForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\AllDorms.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormTable.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormDetailsShow.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\CreateOrEditDorm.jsx",["139"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../module/Modal.jsx\";\r\nimport DormForm from \"../dorm/DormForm.jsx\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\nconst CreateOrEditDorm = props => {\r\n\r\n    const [newDorm, setNewDorm] = useState({\r\n        name: \"\",\r\n        address: \"\"\r\n    });\r\n\r\n    const addNewDorm = (dorm) =>{\r\n        axios.post(\"http://localhost:8080/api/dorms/new\", dorm)\r\n        .then(res=>{\r\n            navigate(\"/dorms/\" + res.data.id);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on creating new dorm . Details: \" + err);\r\n        })\r\n\r\n    };\r\n\r\n    const editDorm = (dorm) =>{\r\n        axios.patch(\"http://localhost:8080/api/dorms/\" + props.curDorm.id, dorm)\r\n        .then(res=>{\r\n            props.setCurDorm(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on editing dorm . Details: \" + err);\r\n        })\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            props.curDorm?\r\n            <>\r\n                <Modal\r\n                action = \"Edit Dorm\"\r\n                modalTitle = \"Eidt Dorm\" \r\n                >\r\n                    <DormForm\r\n                    initialState = {props.curDorm}\r\n                    callBack = {editDorm}\r\n                    btn = \"Edit\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n                :\r\n            <>\r\n                <Modal\r\n                action = \"Add New Dorm\"\r\n                modalTitle = \"Add New Dorm\" \r\n                >\r\n                    <DormForm\r\n                    initialState = {newDorm}\r\n                    callBack = {addNewDorm}\r\n                    btn = \"Add\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateOrEditDorm;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\DormForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CreateOrEditCourse.jsx",["140"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../module/Modal.jsx\";\r\nimport CourseForm from \"../course/CourseForm.jsx\";\r\nimport {navigate} from \"@reach/router\";\r\n\r\n\r\nconst CreateOrEditCourse = props => {\r\n\r\n    const [newCourse, setNewCourse] = useState({\r\n        name: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const addNewCourse = (course) => {\r\n        axios.post(\"http://localhost:8080/api/courses/new\", course)\r\n        .then(res=>{\r\n            navigate(\"/courses/\" + res.data.id);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on adding new course. Details: \" + err);\r\n        });\r\n    };\r\n\r\n    const editCourse =(course) => {\r\n        axios.patch(\"http://localhost:8080/api/courses/\" + props.curCourse.id, course)\r\n        .then(res=>{\r\n            props.setCurCourse(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"Error on editing course. Details: \" + err);\r\n        });\r\n    };\r\n\r\n    return(\r\n        <>\r\n        {\r\n            props.curCourse?\r\n            <>\r\n                <Modal\r\n                action = \"Edit Course\"\r\n                modalTitle = \"Edit Course\"\r\n                >\r\n                    <CourseForm\r\n                    initialState = {props.curCourse}\r\n                    callBack = {editCourse}\r\n                    btn = \"Edit\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n            :\r\n            <>\r\n                <Modal\r\n                action = \"Add New Course\"\r\n                modalTitle = \"Add New Course\"\r\n                >\r\n                    <CourseForm\r\n                    initialState = {newCourse}\r\n                    callBack = {addNewCourse}\r\n                    btn = \"Add\"\r\n                    />\r\n                </Modal>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateOrEditCourse;","D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseForm.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\AllCourses.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\course\\CourseTable.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\module\\Delete.jsx",[],"D:\\Dojo_Assignments\\Java\\SpringBoot\\studentRoster\\client\\src\\component\\dorm\\RemoveStudentFromDorm.jsx",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":2,"column":27,"nodeType":"147","messageId":"148","endLine":2,"endColumn":31},{"ruleId":"145","severity":1,"message":"150","line":19,"column":28,"nodeType":"147","messageId":"148","endLine":19,"endColumn":45},{"ruleId":"151","severity":1,"message":"152","line":26,"column":8,"nodeType":"153","endLine":26,"endColumn":18,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":11,"column":12,"nodeType":"147","messageId":"148","endLine":11,"endColumn":24},{"ruleId":"145","severity":1,"message":"156","line":11,"column":26,"nodeType":"147","messageId":"148","endLine":11,"endColumn":41},{"ruleId":"151","severity":1,"message":"157","line":10,"column":8,"nodeType":"153","endLine":10,"endColumn":42,"suggestions":"158"},{"ruleId":"145","severity":1,"message":"159","line":10,"column":24,"nodeType":"147","messageId":"148","endLine":10,"endColumn":37},{"ruleId":"145","severity":1,"message":"160","line":9,"column":21,"nodeType":"147","messageId":"148","endLine":9,"endColumn":31},{"ruleId":"145","severity":1,"message":"161","line":10,"column":23,"nodeType":"147","messageId":"148","endLine":10,"endColumn":35},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setNewContactInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'selectedDorm' is assigned a value but never used.","'setSelectedDorm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["165"],"'setNewStudent' is assigned a value but never used.","'setNewDorm' is assigned a value but never used.","'setNewCourse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [isLoaded, props.id]",{"range":"170","text":"171"},"Update the dependencies array to be: [props, props.checkedAll, props.isLoaded]",{"range":"172","text":"173"},[898,908],"[isLoaded, props.id]",[249,283],"[props, props.checkedAll, props.isLoaded]"]